name: Run linting and tests
on: [push]
jobs:
  lint:
    name: Run linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, fileinfo, mysql
      
      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-
      
      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --optimize-autoloader
      
      - name: Prepare application
        run: |
          cp .env.example .env
          php artisan key:generate
      
      - name: Run Laravel Pint
        run: vendor/bin/pint --test
      
      - name: Run PHPStan
        run: vendor/bin/phpstan --memory-limit=2G
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: 'testing'
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
            - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, fileinfo, mysql
      
      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-
      
      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --optimize-autoloader
      
      - name: Prepare application
        run: |
          cp .env.example .env
          php artisan key:generate
      
      - name: Run tests
        run: php artisan test
        